{"version":3,"sources":["webpack://plants_vs_zombies_clone/./src/game.ts","webpack://plants_vs_zombies_clone/./src/lib/Core/ServiceContainer.ts","webpack://plants_vs_zombies_clone/./src/lib/Model/Cell.ts","webpack://plants_vs_zombies_clone/./src/lib/Model/Defender.ts","webpack://plants_vs_zombies_clone/./src/lib/Model/Enemies/Spider.ts","webpack://plants_vs_zombies_clone/./src/lib/Model/EnemyBase.ts","webpack://plants_vs_zombies_clone/./src/lib/Model/Projectile.ts","webpack://plants_vs_zombies_clone/./src/lib/Services/CanvasManager.ts","webpack://plants_vs_zombies_clone/./src/lib/Services/EnemyManager.ts","webpack://plants_vs_zombies_clone/./src/lib/Services/GameManager.ts","webpack://plants_vs_zombies_clone/./src/lib/Services/Grid.ts","webpack://plants_vs_zombies_clone/./src/lib/Services/Input.ts","webpack://plants_vs_zombies_clone/webpack/bootstrap","webpack://plants_vs_zombies_clone/webpack/runtime/global","webpack://plants_vs_zombies_clone/webpack/runtime/publicPath","webpack://plants_vs_zombies_clone/webpack/startup"],"names":[],"mappings":"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","file":"script.js","sourcesContent":["import Defender from './lib/Model/Defender';\r\n\r\nimport ServiceContainer from './lib/Core/ServiceContainer';\r\nimport CanvasManager from './lib/Services/CanvasManager';\r\nimport GameManager from './lib/Services/GameManager';\r\nimport EnemyManager from './lib/Services/EnemyManager';\r\nimport Grid from './lib/Services/Grid';\r\nimport Input from './lib/Services/Input';\r\n\r\nconst container = new ServiceContainer();\r\n\r\nconst canvas = document.querySelector('#canvas');\r\n\r\n// set container instances and create service classes\r\ncontainer.set('canvasManager', CanvasManager, canvas);\r\ncontainer.set('gameManager', GameManager);\r\nconst canvasManager = container.get('canvasManager');\r\nconst gameManager = container.get('gameManager');\r\n\r\ncontainer.set('enemyManager', EnemyManager, gameManager, canvasManager);\r\ncontainer.set('input', Input, gameManager, canvas);\r\nconst enemyManager = container.get('enemyManager');\r\nconst input = container.get('input');\r\n\r\ncontainer.set('grid', Grid, canvasManager, input, gameManager.cellSize);\r\nconst grid = container.get('grid');\r\n\r\n// todo add a gameState object for all the globals?\r\n\r\n// manager for\r\n// - enemies\r\n// - defenders (+ projectiles)\r\n// each manager holds the array of objects and has a get method\r\n// or just one single instance of object manager?\r\n\r\n// consider the use of finite state machine\r\n// - game has essentially four states: won, lost, running, start_screen\r\n// - enemies and defenders also have states: alive, shooting/attacking, walking, dead/dying\r\n\r\n// how can I break this stuff apart?\r\n// I can break out the user input (note: user input will interact only with cells/defenders for now. later maybe ui and other stuff on a cell)\r\n// the more I think about it, it makes sense to somewhere manage the cells directly\r\n// I can break out the drawing stuff\r\n\r\n// maybe from an architecural standpoint it doe snot make much sense to separate defenders and enemies - but it would give a better overview\r\n\r\n// actually, we could check when the cells are drawn if the cell has a defender and then handle him.\r\nfunction drawDefenders() {\r\n  let cellsWithDefenders = grid.cells.filter(cell => cell.defender !== null);\r\n  cellsWithDefenders.forEach(cell => {\r\n    // if defender health is 0 or below, remove him\r\n    if (cell.defender.health <= 0) {\r\n      cell.defender = null;\r\n      return;\r\n    }\r\n    cell.defender.draw();\r\n    if (detectEnemiesOnRow(cell.defender.row) && gameManager.frames % 150 == 0)\r\n      cell.defender.shoot();\r\n  });\r\n}\r\n\r\nfunction handleProjectiles() {\r\n  const defenders = getDefendersArray();\r\n  defenders.forEach(defender => {\r\n    for (let i = 0; i < defender.projectiles.length; i++) {\r\n      defender.projectiles[i].draw();\r\n\r\n      // if the projectile goes off screen, remove it\r\n      if (defender.projectiles[i].x > canvas.width) {\r\n        defender.projectiles.splice(i, 1);\r\n        i--;\r\n        continue;\r\n      }\r\n\r\n      // we use every here, because we cannot break out of forEach once we found a collision\r\n      enemyManager.enemies.every(enemy => {\r\n        if (\r\n          defender.projectiles[i].x + defender.projectiles[i].width >=\r\n            enemy.x &&\r\n          defender.projectiles[i].row === enemy.row\r\n        ) {\r\n          enemy.health -= defender.projectiles[i].damage;\r\n          defender.projectiles.splice(i, 1);\r\n          i--;\r\n          // return false to break out of every\r\n          return false;\r\n        }\r\n        // return true to keep the loop going\r\n        return true;\r\n      });\r\n    }\r\n  });\r\n}\r\n\r\nfunction placeDefender(e) {\r\n  if (!gameManager.gameIsRunning) {\r\n    return;\r\n  }\r\n\r\n  let activeCellArr = grid.cells.filter(cell =>\r\n    cell.isHoverdOver(input.mouseX, input.mouseY)\r\n  );\r\n  if (activeCellArr.length !== 1) return;\r\n\r\n  let activeCell = activeCellArr[0];\r\n\r\n  if (activeCell.defender) {\r\n    console.log('there is already a defender on this tile');\r\n    return;\r\n  }\r\n\r\n  // check if we can afford the defender\r\n  if (gameManager.ressources - Defender.cost < 0) {\r\n    console.log('not enough ressources');\r\n    return;\r\n  }\r\n\r\n  // make sure that there is no enemy on the tile\r\n  let enemyAtTheGates = enemyManager.enemies.filter(enemy => {\r\n    return detectRowBasedCollision(activeCell, enemy);\r\n  });\r\n  if (enemyAtTheGates.length > 0) {\r\n    console.log('you cannot place defenders on tiles with enemies!');\r\n    return;\r\n  }\r\n\r\n  activeCell.defender = new Defender(\r\n    activeCell.x,\r\n    activeCell.y,\r\n    activeCell.width,\r\n    activeCell.height,\r\n    gameManager.cellSize,\r\n    canvasManager\r\n  );\r\n  gameManager.ressources -= Defender.cost;\r\n\r\n  console.log(activeCell);\r\n}\r\n\r\n/** Helper that returns an array of defender objects. */\r\nfunction getDefendersArray() {\r\n  return grid.cells.reduce(function(defendersArr, cell) {\r\n    if (cell.defender !== null) {\r\n      defendersArr.push(cell.defender);\r\n    }\r\n    return defendersArr;\r\n  }, []);\r\n}\r\n\r\n/** Helper that detects if there are enemies on the defender's row */\r\nfunction detectEnemiesOnRow(row) {\r\n  return enemyManager.enemies.some(enemy => enemy.row === row);\r\n}\r\n\r\n// this function draws all the info about game state\r\nfunction drawGameInfo() {\r\n  canvasManager.drawText('Ressources: ' + gameManager.ressources, 10, 30);\r\n  canvasManager.drawText('Health of base: ' + gameManager.baseHealth, 200, 30);\r\n  canvasManager.drawText(\r\n    'Victory Points: ' + gameManager.victoryPoints,\r\n    420,\r\n    30\r\n  );\r\n}\r\n\r\n// handle collision detection between defenders and enemies\r\nfunction detectRowBasedCollision(defender, enemy) {\r\n  return (\r\n    defender.x + defender.width >= enemy.x &&\r\n    // without this condition, it would not be able to place\r\n    // defenders to the right of enemies\r\n    defender.x < enemy.x + enemy.width &&\r\n    defender.row === enemy.row\r\n  );\r\n}\r\n\r\nfunction handleCollisions() {\r\n  let defenders = getDefendersArray();\r\n\r\n  if (defenders.length >= 1) {\r\n    defenders.forEach(defender => {\r\n      enemyManager.enemies.forEach(enemy => {\r\n        if (detectRowBasedCollision(defender, enemy)) {\r\n          // stop the enemy from moving\r\n          enemy.isMoving = false;\r\n          // reduce the health of the defender\r\n          // (debounce it a bit because it is very fast)\r\n          if (gameManager.frames % 5 === 0) defender.health -= 1;\r\n          // if the defender is dead, start moving again.\r\n          // defenders are removed in drawDefenders function\r\n          if (defender.health <= 0) enemy.isMoving = true;\r\n        }\r\n      });\r\n    });\r\n  } else {\r\n    // if there are no defenders, make sure all enemies are moving\r\n    enemyManager.enemies.forEach(enemy => (enemy.isMoving = true));\r\n  }\r\n}\r\n\r\nfunction restartGame(e) {\r\n  // check if we clicked on the button\r\n  if (\r\n    !gameManager.gameIsRunning &&\r\n    e.clientX >= canvas.width / 2 - 60 &&\r\n    e.clientX <= canvas.width / 2 + 60 &&\r\n    e.clientY >= canvas.height / 2 + 80 &&\r\n    e.clientY <= canvas.height / 2 + 120\r\n  ) {\r\n    gameManager.gameIsRunning = true;\r\n    // reset game variables\r\n    gameManager.frames = 0;\r\n    enemyManager.enemies = [];\r\n    enemyManager.dyingEnemies = [];\r\n    gameManager.ressources = 300;\r\n    gameManager.baseHealth = 500;\r\n    gameManager.victoryPoints = 0;\r\n    grid.reset();\r\n    gameLoop();\r\n  }\r\n}\r\n\r\nfunction gameLoop() {\r\n  // check if game is won or lost\r\n  if (gameManager.baseHealth <= 0) {\r\n    // todo: we have three times more or less the same code. Make this a generic \"drawStartEndScreen\" or something method\r\n    // and simply pass in the variable parts, that is text and btn text!\r\n    gameManager.gameIsRunning = false;\r\n    canvasManager.drawFilledRect(0, 0, 600, 400, {\r\n      fillStyle: 'rgba(0,0,0,.5)'\r\n    });\r\n    const options = {\r\n      fillStyle: '#FFF',\r\n      font: '30px Arial',\r\n      textBaseline: 'middle',\r\n      textAlign: 'center'\r\n    };\r\n\r\n    canvasManager.drawText(\r\n      'The enemies destroyed the base.',\r\n      canvas.width / 2,\r\n      canvas.height / 2 + 20,\r\n      options\r\n    );\r\n\r\n    canvasManager.drawText(\r\n      'The game is lost!',\r\n      canvas.width / 2,\r\n      canvas.height / 2 - 20,\r\n      options\r\n    );\r\n    // draw restart button\r\n    canvasManager.drawFilledRect(\r\n      canvas.width / 2 - 60,\r\n      canvas.height / 2 + 80,\r\n      120,\r\n      40,\r\n      { fillStyle: '#FFF' }\r\n    );\r\n    canvasManager.drawText(\r\n      'PLAY AGAIN',\r\n      canvas.width / 2,\r\n      canvas.height / 2 + 100,\r\n      {\r\n        textBaseline: 'middle',\r\n        textAlign: 'center'\r\n      }\r\n    );\r\n    return;\r\n  } else if (gameManager.victoryPoints >= 100) {\r\n    gameManager.gameIsRunning = false;\r\n    canvasManager.drawFilledRect(0, 0, 600, 400, {\r\n      fillStyle: 'rgba(0,0,0,.5)'\r\n    });\r\n    const options = {\r\n      fillStyle: '#FFF',\r\n      font: '30px Arial',\r\n      textBaseline: 'middle',\r\n      textAlign: 'center'\r\n    };\r\n\r\n    canvasManager.drawText(\r\n      'The enemy forces suffered heavy losses',\r\n      canvas.width / 2,\r\n      canvas.height / 2 - 40,\r\n      options\r\n    );\r\n    canvasManager.drawText(\r\n      'and are retreating.',\r\n      canvas.width / 2,\r\n      canvas.height / 2,\r\n      options\r\n    );\r\n    canvasManager.drawText(\r\n      'You are victorious!',\r\n      canvas.width / 2,\r\n      canvas.height / 2 + 40,\r\n      options\r\n    );\r\n    // draw restart button\r\n    canvasManager.drawFilledRect(\r\n      canvas.width / 2 - 60,\r\n      canvas.height / 2 + 80,\r\n      120,\r\n      40,\r\n      { fillStyle: '#FFF' }\r\n    );\r\n    canvasManager.drawText(\r\n      'PLAY AGAIN',\r\n      canvas.width / 2,\r\n      canvas.height / 2 + 100,\r\n      {\r\n        textBaseline: 'middle',\r\n        textAlign: 'center'\r\n      }\r\n    );\r\n    return;\r\n  }\r\n\r\n  canvasManager.ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n  // what do we do here essentially?\r\n  // we draw stuff: the gameboard itself, the ui, enemies, defenders and projectiles\r\n  // we \"handle\" stuff, that is, we do game logic: i.e. collision detection, movement, gaining ressources ...\r\n\r\n  grid.draw();\r\n  drawDefenders();\r\n  handleProjectiles();\r\n\r\n  enemyManager.generateEnemies();\r\n  enemyManager.handleEnemies();\r\n  handleCollisions();\r\n  enemyManager.drawEnemies();\r\n  enemyManager.handleDyingEnemies();\r\n  drawGameInfo();\r\n\r\n  gameManager.frames++;\r\n\r\n  requestAnimationFrame(gameLoop);\r\n}\r\n\r\n// draw the start screen\r\ncanvasManager.drawFilledRect(0, 0, 600, 400, { fillStyle: 'rgba(0,0,0,.5)' });\r\nconst options = {\r\n  fillStyle: '#FFF',\r\n  font: '30px Arial',\r\n  textBaseline: 'middle',\r\n  textAlign: 'center'\r\n};\r\n\r\ncanvasManager.drawText(\r\n  'Enemies are attacking our base!',\r\n  canvas.width / 2,\r\n  canvas.height / 2 - 40,\r\n  options\r\n);\r\ncanvasManager.drawText(\r\n  'Place defenders with the mouse to defend the base.',\r\n  canvas.width / 2,\r\n  canvas.height / 2,\r\n  { textBaseline: 'middle', textAlign: 'center', fillStyle: '#FFF' }\r\n);\r\n// draw restart button\r\ncanvasManager.drawFilledRect(\r\n  canvas.width / 2 - 60,\r\n  canvas.height / 2 + 80,\r\n  120,\r\n  40,\r\n  { fillStyle: '#FFF' }\r\n);\r\ncanvasManager.drawText('START', canvas.width / 2, canvas.height / 2 + 100, {\r\n  textBaseline: 'middle',\r\n  textAlign: 'center'\r\n});\r\n\r\ndocument.addEventListener('mousemove', input.setMousePosition);\r\ndocument.addEventListener('click', placeDefender);\r\ndocument.addEventListener('click', restartGame);\r\n","export default class ServiceContainer {\r\n  /** Map containing the services */\r\n  protected services: Map<string, Function>;\r\n\r\n  constructor() {\r\n    this.services = new Map();\r\n  }\r\n\r\n  public set(name: string, service: any, ...params: any) {\r\n    if (typeof this.services.get(name) === 'function') {\r\n      throw new Error(`Key ${name} already exists in the service container.`);\r\n    }\r\n    this.services.set(name, function lazyBuilder() {\r\n      // todo: it would be nice to optionally provide a singleton\r\n      if (typeof lazyBuilder.instance === 'undefined') {\r\n        lazyBuilder.instance = new service(...params);\r\n      }\r\n      return lazyBuilder.instance;\r\n    });\r\n  }\r\n\r\n  public get(name: string) {\r\n    const callback = this.services.get(name);\r\n    if (typeof callback === 'undefined') {\r\n      throw new Error(`Key ${name} does not exist.`);\r\n    }\r\n    if (typeof callback !== 'function') {\r\n      throw new Error(`Key ${name} does is not mapped to a function.`);\r\n    }\r\n    return callback();\r\n  }\r\n}\r\n","export default class Cell {\r\n  constructor(x, y, cellSize) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.width = cellSize;\r\n    this.height = cellSize;\r\n    this.defender = null;\r\n    this.row = y / cellSize;\r\n  }\r\n\r\n  isHoverdOver(x, y) {\r\n    return (\r\n      this.x < x &&\r\n      this.x + this.width > x &&\r\n      this.y < y &&\r\n      this.y + this.height > y\r\n    );\r\n  }\r\n}\r\n","import CanvasManager from '../Services/CanvasManager';\r\nimport Projectile from './Projectile';\r\n\r\nexport default class Defender implements GameObjectInterface {\r\n  x: number;\r\n  y: number;\r\n  width: number;\r\n  height: number;\r\n  row: number;\r\n  static cost = 100;\r\n  /** Array holding the projectiles of this defender */\r\n  projectiles: Projectile[];\r\n  health: number;\r\n  damage: number;\r\n  /** Reference to the CanvasManager */\r\n  canvasManager: CanvasManager;\r\n\r\n  constructor(\r\n    x: number,\r\n    y: number,\r\n    width: number,\r\n    height: number,\r\n    cellSize: number,\r\n    canvasManager: CanvasManager\r\n  ) {\r\n    this.health = 100;\r\n    this.damage = 20;\r\n    this.x = x;\r\n    this.y = y;\r\n    this.width = width;\r\n    this.height = height;\r\n    this.row = y / cellSize;\r\n    this.canvasManager = canvasManager;\r\n    this.projectiles = [];\r\n  }\r\n\r\n  draw() {\r\n    this.canvasManager.drawFilledRect(this.x, this.y, this.width, this.height, {\r\n      fillStyle: '#00F'\r\n    });\r\n    // draw health info\r\n    this.canvasManager.drawText(\r\n      this.health.toString(),\r\n      this.x + 10,\r\n      this.y + 30,\r\n      { fillStyle: '#000', font: '16px Arial' }\r\n    );\r\n  }\r\n\r\n  shoot() {\r\n    this.projectiles.push(\r\n      new Projectile(this.x, this.y, this.damage, this.row, this.canvasManager)\r\n    );\r\n  }\r\n}\r\n","import enemy1SpriteSheet from '../../../assets/sprites/enemy1.png';\r\nimport CanvasManager from '../../Services/CanvasManager';\r\nimport EnemyBase from '../EnemyBase';\r\n\r\nexport default class Spider extends EnemyBase {\r\n  constructor(y: number, cellSize: number, canvasManager: CanvasManager) {\r\n    super(y, cellSize, canvasManager);\r\n    this.spriteSheet.src = enemy1SpriteSheet;\r\n    this.spriteSheetInfo = {\r\n      width: 258,\r\n      height: 6780,\r\n      animationSets: {\r\n        move: {\r\n          numOfSprites: 5,\r\n          currentSprite: -1,\r\n          startX: 0,\r\n          startY: 5490,\r\n          sizeX: 258,\r\n          sizeY: 258\r\n        },\r\n        die: {\r\n          numOfSprites: 10,\r\n          currentSprite: -1,\r\n          startX: 0,\r\n          startY: 2940,\r\n          sizeX: 258,\r\n          sizeY: 258\r\n        },\r\n        attack: {\r\n          numOfSprites: 15,\r\n          currentSprite: -1,\r\n          startX: 0,\r\n          startY: 0,\r\n          sizeX: 258,\r\n          sizeY: 194\r\n        }\r\n      }\r\n    };\r\n  }\r\n}\r\n","import CanvasManager from '../Services/CanvasManager';\r\n\r\nexport default abstract class EnemyBase\r\n  implements GameObjectInterface, Moveable, MyAnimatable {\r\n  x: number;\r\n  y: number;\r\n  width: number;\r\n  height: number;\r\n  row: number;\r\n  health: number;\r\n  damage: number;\r\n  worth: number;\r\n  /** Reference to the CanvasManager */\r\n  canvasManager: CanvasManager;\r\n  speed: number;\r\n  isMoving: boolean;\r\n  spriteSheet: HTMLImageElement;\r\n  animation: Object | null;\r\n  spriteSheetInfo: Object;\r\n  victoryPoints: number;\r\n  debounce: number;\r\n  dyingAnimationPlayed: boolean;\r\n\r\n  constructor(y: number, cellSize: number, canvasManager: CanvasManager) {\r\n    this.canvasManager = canvasManager;\r\n    this.health = 100;\r\n    this.worth = 50;\r\n    this.damage = 20;\r\n    this.y = y;\r\n    this.x = canvasManager.getCanvasWidth();\r\n    this.width = cellSize;\r\n    this.height = cellSize;\r\n    this.speed = 0.5;\r\n    this.isMoving = true;\r\n    this.row = y / cellSize;\r\n    this.victoryPoints = 5;\r\n    this.spriteSheet = new Image();\r\n    this.spriteSheetInfo = {};\r\n    this.animation = null;\r\n    this.debounce = 0;\r\n    this.dyingAnimationPlayed = false;\r\n  }\r\n\r\n  draw() {\r\n    if (this.health <= 0) {\r\n      this.animation = this.spriteSheetInfo.animationSets.die;\r\n    } else if (this.isMoving) {\r\n      this.x -= this.speed;\r\n      this.animation = this.spriteSheetInfo.animationSets.move;\r\n    }\r\n    // if the enemy is not moving, it means it reached a defender and should therefore attack\r\n    else {\r\n      this.animation = this.spriteSheetInfo.animationSets.attack;\r\n    }\r\n\r\n    // debounce animation\r\n    if (this.debounce % 10 === 0) {\r\n      // new try with animation variable\r\n      // we increment the sprite first and the check if it exceeds the limit. Keep in mind, it is 5 sprites here, but we\r\n      // start at 0! So we actually have indices 0-4. If the index reaches 5, we must reset it to 0.\r\n      // Another option is to keep the if-else structure, but then we need to move this code below the drawImage function!\r\n      // Otherwise this happens: we come in with index 4, which still triggers the else part of the statement. So we increment\r\n      // it to 5 and draw index 5 which is actually too big.\r\n      // We could also subtract -1 from numOfSprites in the if-statement to account for starting at 0. maybe this would be\r\n      // most reasonable.\r\n      if (this.animation.currentSprite >= this.animation.numOfSprites - 1) {\r\n        this.animation.currentSprite = 0;\r\n        if (this.health <= 0) {\r\n          this.dyingAnimationPlayed = true;\r\n        }\r\n      } else {\r\n        this.animation.currentSprite++;\r\n      }\r\n    }\r\n\r\n    this.canvasManager.ctx.drawImage(\r\n      this.spriteSheet,\r\n      this.animation.startX,\r\n      this.animation.startY +\r\n        this.animation.currentSprite * this.animation.sizeY,\r\n      this.animation.sizeX,\r\n      this.animation.sizeY,\r\n      this.x,\r\n      this.y,\r\n      this.width,\r\n      this.height\r\n    );\r\n    // draw health info\r\n    this.canvasManager.drawText(\r\n      this.health.toString(),\r\n      this.x + 10,\r\n      this.y + 20,\r\n      {\r\n        fillStyle: '#000',\r\n        font: '16px Arial'\r\n      }\r\n    );\r\n\r\n    this.debounce++;\r\n  }\r\n}\r\n","import CanvasManager from '../Services/CanvasManager';\r\n\r\nexport default class Projectile implements GameObjectInterface {\r\n  x: number;\r\n  y: number;\r\n  width: number;\r\n  height: number;\r\n  row: number;\r\n\r\n  damage: number;\r\n  speed: number;\r\n  /** Reference to the CanvasManager */\r\n  canvasManager: CanvasManager;\r\n\r\n  constructor(\r\n    x: number,\r\n    y: number,\r\n    damage: number,\r\n    row: number,\r\n    canvasManager: CanvasManager\r\n  ) {\r\n    this.damage = damage;\r\n    this.x = x;\r\n    this.y = y;\r\n    this.width = 20;\r\n    this.height = 20;\r\n    this.row = row;\r\n    this.speed = 0.5;\r\n    this.canvasManager = canvasManager;\r\n  }\r\n\r\n  draw() {\r\n    this.x += this.speed;\r\n    this.canvasManager.drawFilledRect(\r\n      this.x + this.width / 2,\r\n      this.y + this.height / 2,\r\n      this.width,\r\n      this.height,\r\n      { fillStyle: '#FF0' }\r\n    );\r\n  }\r\n}\r\n","export default class CanvasManager {\r\n  /** Reference to the canvas */\r\n  private canvas: HTMLCanvasElement;\r\n\r\n  /** Reference to the drawing context */\r\n  private ctx: CanvasRenderingContext2D | null;\r\n\r\n  constructor(canvas: HTMLCanvasElement) {\r\n    this.canvas = canvas;\r\n    this.canvas.width = 600;\r\n    this.canvas.height = 400;\r\n    this.ctx = this.canvas.getContext('2d');\r\n  }\r\n\r\n  public drawText(text: string, x: number, y: number, options = {}) {\r\n    let props = Object.keys(options);\r\n    if (props.length > 0) {\r\n      props.forEach(key => (this.ctx[key] = options[key]));\r\n    }\r\n    this.ctx!.fillText(text, x, y);\r\n    this.reset();\r\n  }\r\n\r\n  public drawFilledRect(\r\n    x: number,\r\n    y: number,\r\n    width: number,\r\n    height: number,\r\n    options = {}\r\n  ) {\r\n    let props = Object.keys(options);\r\n    if (props.length > 0) {\r\n      props.forEach(key => (this.ctx[key] = options[key]));\r\n    }\r\n    this.ctx!.fillRect(x, y, width, height);\r\n    this.reset();\r\n  }\r\n\r\n  public getCanvasWidth() {\r\n    return this.canvas.width;\r\n  }\r\n  public getCanvasHeight() {\r\n    return this.canvas.height;\r\n  }\r\n\r\n  /**\r\n   * Resets the canvas properties to their default state.\r\n   * This function is meant to only be called within the service.\r\n   */\r\n  private reset() {\r\n    this.ctx!.textBaseline = 'alphabetic';\r\n    this.ctx!.textAlign = 'start';\r\n    this.ctx!.fillStyle = '#000000';\r\n    this.ctx!.filter = 'none';\r\n    this.ctx!.font = '20px Arial';\r\n    this.ctx!.globalAlpha = 1;\r\n    this.ctx!.globalCompositeOperation = 'source-over';\r\n    this.ctx!.imageSmoothingEnabled = true;\r\n    this.ctx!.lineWidth = 1;\r\n    this.ctx!.shadowBlur = 0;\r\n    this.ctx!.shadowColor = 'rgba(0, 0, 0, 0)';\r\n    this.ctx!.shadowOffsetX = 0;\r\n    this.ctx!.shadowOffsetY = 0;\r\n    this.ctx!.strokeStyle = '#000000';\r\n  }\r\n}\r\n","import EnemyBase from '../Model/EnemyBase';\r\nimport GameManager from './GameManager';\r\nimport Spider from '../Model/Enemies/Spider';\r\nimport CanvasManager from './CanvasManager';\r\n\r\nexport default class EnemyManager {\r\n  enemies: Array<EnemyBase>;\r\n  dyingEnemies: Array<EnemyBase>;\r\n  gameManager: GameManager;\r\n  canvasManager: CanvasManager;\r\n\r\n  constructor(gameManager: GameManager, canvasManager: CanvasManager) {\r\n    this.gameManager = gameManager;\r\n    this.canvasManager = canvasManager;\r\n    this.enemies = [];\r\n    this.dyingEnemies = [];\r\n  }\r\n\r\n  generateEnemies() {\r\n    // we add cellsize to account for the uppermost part of the\r\n    // canvas that is not part of the gamebord\r\n    let randomRow =\r\n      Math.floor(Math.random() * this.gameManager.numOfRows) *\r\n        this.gameManager.cellSize +\r\n      this.gameManager.cellSize;\r\n    if (this.gameManager.frames % 150 === 0) {\r\n      this.enemies.push(\r\n        new Spider(randomRow, this.gameManager.cellSize, this.canvasManager)\r\n      );\r\n    }\r\n  }\r\n\r\n  drawEnemies() {\r\n    this.enemies.forEach(enemy => {\r\n      enemy.draw();\r\n    });\r\n  }\r\n\r\n  handleEnemies() {\r\n    // if an enemy leaves the board, damage the base and\r\n    // remove him from the enemies array\r\n    for (let i = 0; i < this.enemies.length; i++) {\r\n      this.enemies[i].isMoving = true;\r\n      // remove dead this. and grant ressources\r\n      if (this.enemies[i].health <= 0) {\r\n        this.gameManager.ressources += this.enemies[i].worth;\r\n        this.gameManager.victoryPoints += this.enemies[i].victoryPoints;\r\n        let deadEnemy = this.enemies.splice(i, 1);\r\n        this.dyingEnemies.push(deadEnemy[0]);\r\n        i--;\r\n        continue;\r\n      }\r\n\r\n      if (this.enemies[i].x < 0 - this.gameManager.cellSize) {\r\n        // damage the base\r\n        this.gameManager.baseHealth -= this.enemies[i].damage;\r\n        // remove enemy from the array\r\n        this.enemies.splice(i, 1);\r\n        // decrement i because array gets shorter\r\n        // in practice this should be nigh irrelevant because though\r\n        // it prevents \"jumping\" over the next array element, both\r\n        // elements would need to be outside the gameboard on the\r\n        // exact same frame\r\n        i--;\r\n      }\r\n    }\r\n  }\r\n\r\n  handleDyingEnemies() {\r\n    for (let i = 0; i < this.dyingEnemies.length; i++) {\r\n      if (this.dyingEnemies[i].dyingAnimationPlayed) {\r\n        this.dyingEnemies.splice(i, 1);\r\n        i--;\r\n        continue;\r\n      }\r\n      this.dyingEnemies[i].draw();\r\n    }\r\n  }\r\n}\r\n","export default class GameManager {\r\n  constructor() {\r\n    this.cellSize = 50;\r\n    this.numOfRows = 7;\r\n    this.ressources = 300;\r\n    // health of the base. If it falls below 0 the game is lost\r\n    this.baseHealth = 500;\r\n    // victory points are awarded when an enemy is killed. If enough are reached, the player wins\r\n    this.victoryPoints = 0;\r\n    this.gameIsRunning = false;\r\n    this.frames = 0;\r\n  }\r\n}\r\n","import Cell from '../Model/Cell';\r\n\r\nexport default class Grid {\r\n  constructor(canvasManager, input, cellSize) {\r\n    this.canvasManager = canvasManager;\r\n    this.input = input;\r\n    this.cells = [];\r\n    this.cellSize = cellSize;\r\n    this.width = this.canvasManager.getCanvasWidth();\r\n    this.height = this.canvasManager.getCanvasHeight();\r\n  }\r\n\r\n  createCells() {\r\n    for (let x = 0; x < this.width; x += this.cellSize) {\r\n      for (let y = this.cellSize; y < this.height; y += this.cellSize) {\r\n        let cell = new Cell(x, y, this.cellSize);\r\n        this.cells.push(cell);\r\n      }\r\n    }\r\n  }\r\n\r\n  reset() {\r\n    this.cells = [];\r\n    this.createCells();\r\n  }\r\n\r\n  // TODO: we can simply loop over the cells array - no need for nested for-loop!\r\n  draw() {\r\n    this.canvasManager.ctx.strokeStyle = '#000';\r\n    for (let x = 0; x < this.width; x += this.cellSize) {\r\n      for (let y = this.cellSize; y < this.height; y += this.cellSize) {\r\n        // highlight the cell with the cursor\r\n        if (\r\n          this.input.mouseX &&\r\n          this.input.mouseX > x &&\r\n          this.input.mouseX < x + this.cellSize &&\r\n          this.input.mouseY &&\r\n          this.input.mouseY > y &&\r\n          this.input.mouseY < y + this.cellSize\r\n        ) {\r\n          this.canvasManager.ctx.strokeStyle = '#0F0';\r\n          this.canvasManager.ctx.beginPath();\r\n          this.canvasManager.ctx.rect(x, y, this.cellSize, this.cellSize);\r\n          this.canvasManager.ctx.stroke();\r\n          this.canvasManager.ctx.strokeStyle = '#000';\r\n        }\r\n        // we can use this later if we want to toggle grid on/off\r\n        else {\r\n          this.canvasManager.ctx.beginPath();\r\n          this.canvasManager.ctx.rect(x, y, this.cellSize, this.cellSize);\r\n          this.canvasManager.ctx.stroke();\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","export default class Input {\r\n  constructor(gameManager, canvas) {\r\n    this.gameManager = gameManager;\r\n    this.canvas = canvas;\r\n    this.mouseX = undefined;\r\n    this.mouseY = undefined;\r\n    // since setMousePosition is invoked by an event handler, we must bind this tonot lose it\r\n    this.setMousePosition = this.setMousePosition.bind(this);\r\n  }\r\n\r\n  setMousePosition(e) {\r\n    // only perform this action every 2 frames (primitive debounce).\r\n    if (this.gameManager.frames % 2 === 0) {\r\n      // console.log(e);\r\n      // console.log(canvas);\r\n\r\n      // if the mouse is not inside the canvas, return\r\n      if (\r\n        e.clientX - this.canvas.offsetLeft < 0 || // left\r\n        e.clientX - this.canvas.offsetLeft > this.canvas.width || // right\r\n        e.clientY - this.canvas.offsetTop < 0 || // top\r\n        e.clientY - this.canvas.offsetTop > this.canvas.height // bottom\r\n      ) {\r\n        this.mouseX = undefined;\r\n        this.mouseY = undefined;\r\n        return;\r\n      }\r\n      this.mouseX = e.clientX - this.canvas.offsetLeft;\r\n      this.mouseY = e.clientY - this.canvas.offsetTop;\r\n\r\n      // console.log('mouseX: ' + mouseX);\r\n      // console.log('mouseY: ' + mouseY);\r\n    }\r\n  }\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/game.ts\");\n"],"sourceRoot":""}